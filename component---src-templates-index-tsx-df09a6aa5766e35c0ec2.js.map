{"version":3,"file":"component---src-templates-index-tsx-df09a6aa5766e35c0ec2.js","mappings":"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","sources":["webpack://devdave/./src/templates/index.tsx"],"sourcesContent":["import { graphql } from 'gatsby';\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { css } from '@emotion/react';\n\nimport { Footer } from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport Pagination from '../components/Pagination';\nimport { PostCard } from '../components/PostCard';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  inner,\n  outer,\n  PostFeed,\n  PostFeedRaise,\n  SiteDescription,\n  SiteHeader,\n  SiteHeaderContent,\n  SiteMain,\n  SiteTitle,\n  SiteHeaderStyles,\n} from '../styles/shared';\nimport config from '../website-config';\nimport { PageContext } from './post';\n\nexport interface IndexProps {\n  pageContext: {\n    limit: number;\n    skip: number;\n    currentPage: number;\n    numPages: number;\n    pathPrefix: string;\n  };\n  data: {\n    logo: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData;\n      };\n    };\n    header: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData;\n      };\n    };\n    allMarkdownRemark: {\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n  };\n}\n\nconst IndexPage: React.FC<IndexProps> = props => {\n  const { width, height } = props.data.header.childImageSharp.gatsbyImageData;\n\n  return (\n    <IndexLayout css={HomePosts}>\n      <Helmet>\n        <title>{config.title}</title>\n        <meta name=\"description\" content={config.description} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content={config.title} />\n        <meta property=\"og:description\" content={config.description} />\n        <meta property=\"og:url\" content={config.siteUrl} />\n        <meta\n          property=\"og:image\"\n          content={`${config.siteUrl}${props.data.header.childImageSharp.gatsbyImageData?.images.fallback?.src}`}\n        />\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\n        {config.googleSiteVerification && (\n          <meta name=\"google-site-verification\" content={config.googleSiteVerification} />\n        )}\n        {config.naverSiteVerification && (\n          <meta name=\"naver-site-verification\" content={config.naverSiteVerification} />\n        )}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={config.title} />\n        <meta name=\"twitter:description\" content={config.description} />\n        <meta name=\"twitter:url\" content={config.siteUrl} />\n        <meta\n          name=\"twitter:image\"\n          content={`${config.siteUrl}${props.data.header.childImageSharp.gatsbyImageData?.images.fallback?.src}`}\n        />\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        <meta property=\"og:image:width\" content={width.toString()} />\n        <meta property=\"og:image:height\" content={height.toString()} />\n      </Helmet>\n      <Wrapper>\n        <div\n          css={[outer, SiteHeader, SiteHeaderStyles]}\n          className=\"site-header-background\"\n          style={{\n            backgroundImage: `url('${props.data.header.childImageSharp.gatsbyImageData?.images.fallback?.src}')`,\n          }}\n        >\n          <div css={inner}>\n            <SiteHeaderContent className=\"site-header-conent\">\n              <SiteTitle className=\"site-title\">\n                {props.data.logo ? (\n                  <GatsbyImage\n                    style={{ maxHeight: '55px' }}\n                    image={props.data.logo.childImageSharp.gatsbyImageData}\n                    alt={config.title}\n                  />\n                ) : (\n                  config.title\n                )}\n              </SiteTitle>\n              <SiteDescription>{config.description}</SiteDescription>\n            </SiteHeaderContent>\n            <SiteNav isHome />\n          </div>\n        </div>\n        <main id=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            <div css={[PostFeed, PostFeedRaise]}>\n              {props.data.allMarkdownRemark.edges.map((post) => {\n                return (\n                  <PostCard key={post.node.fields.slug} post={post.node} />\n                );\n              })}\n            </div>\n          </div>\n        </main>\n        <Pagination\n          currentPage={props.pageContext.currentPage}\n          numPages={props.pageContext.numPages}\n          pathPrefix={props.pageContext.pathPrefix}\n        />\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query blogPageQuery($skip: Int!, $limit: Int!) {\n    logo: file(relativePath: { eq: \"img/blog-logo.png\" }) {\n      childImageSharp {\n        gatsbyImageData(layout: FIXED)\n      }\n    }\n    header: file(relativePath: { eq: \"img/blog-cover.jpg\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          layout: FIXED\n          width: 1440\n        )\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { draft: { ne: true } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          timeToRead\n          frontmatter {\n            title\n            date\n            tags\n            draft\n            excerpt\n            image {\n              childImageSharp {\n                gatsbyImageData(\n                  layout: CONSTRAINED\n                  width: 1440\n                )\n              }\n            }\n          }\n          excerpt\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst HomePosts = css`\n  @media (min-width: 795px) {\n    .post-card:nth-of-type(6n + 1):not(.no-image) {\n      flex: 1 1 100%;\n      flex-direction: row;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-image-link {\n      position: relative;\n      flex: 1 1 auto;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-image {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-content {\n      flex: 0 1 357px;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) h2 {\n      font-size: 2.6rem;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) p {\n      font-size: 1.8rem;\n      line-height: 1.55em;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-content-link {\n      padding: 30px 40px 0;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-meta {\n      padding: 0 40px 30px;\n    }\n  }\n`;\n\nexport default IndexPage;\n"],"names":["HomePosts","props","width","height","data","header","childImageSharp","gatsbyImageData","___EmotionJSX","IndexLayout","css","Helmet","config","title","name","content","description","property","siteUrl","_props$data$header$ch","images","fallback","_props$data$header$ch2","src","facebook","googleSiteVerification","naverSiteVerification","_props$data$header$ch3","_props$data$header$ch4","twitter","split","toString","Wrapper","outer","SiteHeader","SiteHeaderStyles","className","style","backgroundImage","_props$data$header$ch5","_props$data$header$ch6","inner","SiteHeaderContent","SiteTitle","logo","GatsbyImage","maxHeight","image","alt","SiteDescription","SiteNav","isHome","id","SiteMain","PostFeed","PostFeedRaise","allMarkdownRemark","edges","map","post","PostCard","key","node","fields","slug","Pagination","currentPage","pageContext","numPages","pathPrefix","Footer"],"sourceRoot":""}