{"componentChunkName":"component---src-templates-index-tsx","path":"/5/","result":{"data":{"logo":{"childImageSharp":{"gatsbyImageData":{"layout":"fixed","backgroundColor":"#080808","images":{"fallback":{"src":"/static/8a5d1bbceb8374ac91f29d7785527a15/18875/blog-logo.png","srcSet":"/static/8a5d1bbceb8374ac91f29d7785527a15/18875/blog-logo.png 436w","sizes":"436px"},"sources":[{"srcSet":"/static/8a5d1bbceb8374ac91f29d7785527a15/fbb92/blog-logo.webp 436w","type":"image/webp","sizes":"436px"}]},"width":436,"height":108}}},"header":{"childImageSharp":{"gatsbyImageData":{"layout":"fixed","backgroundColor":"#080818","images":{"fallback":{"src":"/static/f55e924eff608d71da37e57b398c587d/b5801/blog-cover.jpg","srcSet":"/static/f55e924eff608d71da37e57b398c587d/b5801/blog-cover.jpg 1440w","sizes":"1440px"},"sources":[{"srcSet":"/static/f55e924eff608d71da37e57b398c587d/8e13d/blog-cover.webp 1440w","type":"image/webp","sizes":"1440px"}]},"width":1440,"height":480}}},"allMarkdownRemark":{"edges":[{"node":{"timeToRead":3,"frontmatter":{"title":"Java Phantom Reachable, Phantom Reference 란","date":"2020-12-01T05:26:02.000Z","tags":["reference","java","phantom_reference","phantom_reachable","reachable","기술_면접_질문"],"draft":false,"excerpt":"Java의 Phantom Reachable 특징과 Phantom Reference 사용 예시에 대해 알아봅니다.","image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#486848","images":{"fallback":{"src":"/static/09ab2179559b89d3ddb241d37db13285/86738/cover.jpg","srcSet":"/static/09ab2179559b89d3ddb241d37db13285/79dfe/cover.jpg 360w,\n/static/09ab2179559b89d3ddb241d37db13285/be09f/cover.jpg 720w,\n/static/09ab2179559b89d3ddb241d37db13285/86738/cover.jpg 1440w","sizes":"(min-width: 1440px) 1440px, 100vw"},"sources":[{"srcSet":"/static/09ab2179559b89d3ddb241d37db13285/46060/cover.webp 360w,\n/static/09ab2179559b89d3ddb241d37db13285/c7e6a/cover.webp 720w,\n/static/09ab2179559b89d3ddb241d37db13285/f94ff/cover.webp 1440w","type":"image/webp","sizes":"(min-width: 1440px) 1440px, 100vw"}]},"width":1440,"height":1000}}}},"excerpt":"개요 이 포스팅에서는 Java의 References 종류 중 Phantom Reference의 사용 예시와 **Phantom reachable**의 특징에 대해 알아보겠습니다. Reference 종류는 왜 나누어져 있는가? Java의 Reference…","fields":{"slug":"/development/back-end/java/phantom-reference-in-java"}}},{"node":{"timeToRead":2,"frontmatter":{"title":"Java Weakly Reachable, Weak Reference 란","date":"2020-12-01T04:25:27.000Z","tags":["reference","java","weak_reference","weakly_reachable","reachable","기술_면접_질문"],"draft":false,"excerpt":"Java의 Weakly Reachable 특징과 Weak Reference 사용 예시에 대해 알아봅니다.","image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/42af6e28771081cbb76776cb14ad5050/24dd4/cover.jpg","srcSet":"/static/42af6e28771081cbb76776cb14ad5050/6ce48/cover.jpg 175w,\n/static/42af6e28771081cbb76776cb14ad5050/92240/cover.jpg 350w,\n/static/42af6e28771081cbb76776cb14ad5050/24dd4/cover.jpg 700w","sizes":"(min-width: 700px) 700px, 100vw"},"sources":[{"srcSet":"/static/42af6e28771081cbb76776cb14ad5050/32753/cover.webp 175w,\n/static/42af6e28771081cbb76776cb14ad5050/ab163/cover.webp 350w,\n/static/42af6e28771081cbb76776cb14ad5050/c2d65/cover.webp 700w","type":"image/webp","sizes":"(min-width: 700px) 700px, 100vw"}]},"width":1440,"height":703.5428571428571}}}},"excerpt":"개요 이 포스팅에서는 Java의 References 종류 중 Weak Reference의 사용 예시와 **Weakly reachable**의 특징에 대해 알아보겠습니다. Reference 종류는 왜 나누어져 있는가? Java의 Reference…","fields":{"slug":"/development/back-end/java/weak-reference-in-java"}}},{"node":{"timeToRead":2,"frontmatter":{"title":"Java Softly Reachable, Soft Reference 란","date":"2020-12-01T03:49:05.000Z","tags":["reference","java","soft_reference","softly_reachable","reachable","기술_면접_질문"],"draft":false,"excerpt":"Java의 Softly Reachable 특징과 Soft Reference 사용 예시에 대해 알아봅니다.","image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080818","images":{"fallback":{"src":"/static/c7c92b1bd6624c9c1e86afb737ea437f/69eac/cover.jpg","srcSet":"/static/c7c92b1bd6624c9c1e86afb737ea437f/706fa/cover.jpg 360w,\n/static/c7c92b1bd6624c9c1e86afb737ea437f/f7872/cover.jpg 720w,\n/static/c7c92b1bd6624c9c1e86afb737ea437f/69eac/cover.jpg 1440w","sizes":"(min-width: 1440px) 1440px, 100vw"},"sources":[{"srcSet":"/static/c7c92b1bd6624c9c1e86afb737ea437f/22e2a/cover.webp 360w,\n/static/c7c92b1bd6624c9c1e86afb737ea437f/4da88/cover.webp 720w,\n/static/c7c92b1bd6624c9c1e86afb737ea437f/31706/cover.webp 1440w","type":"image/webp","sizes":"(min-width: 1440px) 1440px, 100vw"}]},"width":1440,"height":960}}}},"excerpt":"개요 이 포스팅에서는 Java의 References 종류 중 Soft Reference의 사용 예시와 **Softly reachable**의 특징에 대해 알아보겠습니다. Reference 종류는 왜 나누어져 있는가? Java의 Reference…","fields":{"slug":"/development/back-end/java/soft-reference-in-java"}}},{"node":{"timeToRead":1,"frontmatter":{"title":"Java Strongly Reachable, Strong Reference 란","date":"2020-12-01T02:19:15.000Z","tags":["reference","java","strong_reference","strongly_reachable","reachable","기술_면접_질문"],"draft":false,"excerpt":"Java의 Strongly Reachable 특징과 Strong Reference 사용 예시에 대해 알아봅니다.","image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/073a46ccfdc8b504382098cb7aaf7abf/3d29c/cover.jpg","srcSet":"/static/073a46ccfdc8b504382098cb7aaf7abf/a3faa/cover.jpg 360w,\n/static/073a46ccfdc8b504382098cb7aaf7abf/bac42/cover.jpg 720w,\n/static/073a46ccfdc8b504382098cb7aaf7abf/3d29c/cover.jpg 1440w","sizes":"(min-width: 1440px) 1440px, 100vw"},"sources":[{"srcSet":"/static/073a46ccfdc8b504382098cb7aaf7abf/5ea19/cover.webp 360w,\n/static/073a46ccfdc8b504382098cb7aaf7abf/b39fa/cover.webp 720w,\n/static/073a46ccfdc8b504382098cb7aaf7abf/c0eec/cover.webp 1440w","type":"image/webp","sizes":"(min-width: 1440px) 1440px, 100vw"}]},"width":1440,"height":752}}}},"excerpt":"개요 이 포스팅에서는 Java의 References 종류 중 Strong Reference의 사용 예시와 Strongly reachable의 특징에 대해 알아보겠습니다. Reference 종류는 왜 나누어져 있는가? Java의 Reference…","fields":{"slug":"/development/back-end/java/strong-reference-in-java"}}},{"node":{"timeToRead":4,"frontmatter":{"title":"HSTS (HTTP Strict Transport Security) 개념과 Spring Security의 HSTS 설정 및 이슈 해결 과정","date":"2020-11-19T08:30:21.000Z","tags":["spring_security","hsts","http_strict_transport_security","nginx","tomcat","ssl","secure_socket_layer"],"draft":false,"excerpt":"HSTS(HTTP Strict Transport Security)의 개념과 Spring Security의 HSTS 설정 방법 그리고 Nginx + Tomcat의 환경에서 HSTS 설정중 겪은 이슈에 대해 알아봅니다.","image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/8ad0a5528beee862a333b596370c8396/4a49b/cover.jpg","srcSet":"/static/8ad0a5528beee862a333b596370c8396/b4dad/cover.jpg 320w,\n/static/8ad0a5528beee862a333b596370c8396/3440d/cover.jpg 640w,\n/static/8ad0a5528beee862a333b596370c8396/4a49b/cover.jpg 1280w","sizes":"(min-width: 1280px) 1280px, 100vw"},"sources":[{"srcSet":"/static/8ad0a5528beee862a333b596370c8396/c0bcc/cover.webp 320w,\n/static/8ad0a5528beee862a333b596370c8396/17574/cover.webp 640w,\n/static/8ad0a5528beee862a333b596370c8396/71d4d/cover.webp 1280w","type":"image/webp","sizes":"(min-width: 1280px) 1280px, 100vw"}]},"width":1440,"height":810}}}},"excerpt":"개요 이 포스팅에서는 HSTS(HTTP Strict Transport Security)의 개념에 대해 알아보고,\nNginx + Tomcat의 환경에서\nSpring Security의 HSTS 설정중 겪은 이슈에 대해 공유하려 합니다. HSTS(HTTP…","fields":{"slug":"/development/back-end/spring-security/what-is-the-hsts"}}},{"node":{"timeToRead":4,"frontmatter":{"title":"Java 접근 제어자 (Access Modifier)","date":"2020-11-18T03:50:10.000Z","tags":["java","access_modifier","interview"],"draft":false,"excerpt":"Java의 접근 제어자(Access Modifier)의 종류 및 차이에 대해 알아봅니다.","image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/76f8fc3f5ed12231fb19c9ed51ac593c/db9be/cover.jpg","srcSet":"/static/76f8fc3f5ed12231fb19c9ed51ac593c/2c0a8/cover.jpg 360w,\n/static/76f8fc3f5ed12231fb19c9ed51ac593c/76181/cover.jpg 720w,\n/static/76f8fc3f5ed12231fb19c9ed51ac593c/db9be/cover.jpg 1440w","sizes":"(min-width: 1440px) 1440px, 100vw"},"sources":[{"srcSet":"/static/76f8fc3f5ed12231fb19c9ed51ac593c/526dd/cover.webp 360w,\n/static/76f8fc3f5ed12231fb19c9ed51ac593c/1554a/cover.webp 720w,\n/static/76f8fc3f5ed12231fb19c9ed51ac593c/702e4/cover.webp 1440w","type":"image/webp","sizes":"(min-width: 1440px) 1440px, 100vw"}]},"width":1440,"height":748}}}},"excerpt":"개요 이 포스팅에서는 Java의 접근 제어자의 종류에 대해 알아보고, 각 접근제어자별 차이점에 대해 알아보도록 하겠습니다. 접근 제어자(Access Modifier) 란? Java…","fields":{"slug":"/development/back-end/java/what-is-the-access-modifier"}}}]}},"pageContext":{"limit":6,"skip":24,"currentPage":5,"numPages":8,"pathPrefix":"/"}},"staticQueryHashes":["1144773313","288898337"],"slicesMap":{}}