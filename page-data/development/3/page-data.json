{
    "componentChunkName": "component---src-templates-category-tsx",
    "path": "/development/3",
    "result": {"data":{"allCategoryYaml":{"edges":[{"node":{"id":"43bf9aaa-6e34-5b9e-b054-1dd7cbde6853","description":"개발을 진행하며 궁금하거나, 어려웠던 점 혹은 팁 공유","image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/d9f01768da90a6f71e7363da59371496/ea78d/development-cover.jpg","srcSet":"/static/d9f01768da90a6f71e7363da59371496/f6fcd/development-cover.jpg 320w,\n/static/d9f01768da90a6f71e7363da59371496/518ce/development-cover.jpg 640w,\n/static/d9f01768da90a6f71e7363da59371496/ea78d/development-cover.jpg 1280w","sizes":"(min-width: 1280px) 1280px, 100vw"},"sources":[{"srcSet":"/static/d9f01768da90a6f71e7363da59371496/dde70/development-cover.webp 320w,\n/static/d9f01768da90a6f71e7363da59371496/3c1b2/development-cover.webp 640w,\n/static/d9f01768da90a6f71e7363da59371496/f5c3c/development-cover.webp 1280w","type":"image/webp","sizes":"(min-width: 1280px) 1280px, 100vw"}]},"width":1440,"height":956.25}}}}},{"node":{"id":"acb9dfba-806f-5fe9-a9ef-4b38ccf2aa56","description":"알고리즘 문제 풀이 및 팁 공유","image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#e8e8e8","images":{"fallback":{"src":"/static/7c059598688e3fd026dab3857225bb51/7f99f/algorithm-cover.jpg","srcSet":"/static/7c059598688e3fd026dab3857225bb51/3b635/algorithm-cover.jpg 360w,\n/static/7c059598688e3fd026dab3857225bb51/9007f/algorithm-cover.jpg 720w,\n/static/7c059598688e3fd026dab3857225bb51/7f99f/algorithm-cover.jpg 1440w","sizes":"(min-width: 1440px) 1440px, 100vw"},"sources":[{"srcSet":"/static/7c059598688e3fd026dab3857225bb51/25350/algorithm-cover.webp 360w,\n/static/7c059598688e3fd026dab3857225bb51/110ca/algorithm-cover.webp 720w,\n/static/7c059598688e3fd026dab3857225bb51/8ff83/algorithm-cover.webp 1440w","type":"image/webp","sizes":"(min-width: 1440px) 1440px, 100vw"}]},"width":1440,"height":810}}}}}]},"allMarkdownRemark":{"totalCount":32,"edges":[{"node":{"excerpt":"개요 이 포스팅에서는 Java 객체의 직렬화(Serialization)와 직렬화된 정보를 Java 객체로 만드는 역 직렬화(Deserialization…","timeToRead":6,"frontmatter":{"title":"Java 직렬화 (Serialization)와 역 직렬화 (Deserialization) 란","excerpt":"Java 객체의 직렬화(Serialization)와 역 직렬화(Deserialization)의 개념과 사용 예시에 대해 알아봅니다.","tags":["serialization","deserialization","serializable","java","기술_면접_질문"],"date":"2021-01-11T08:43:16.000Z","image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/a7e90b1e442fd11794e6d54deb3c9896/da6c7/cover.jpg","srcSet":"/static/a7e90b1e442fd11794e6d54deb3c9896/62978/cover.jpg 360w,\n/static/a7e90b1e442fd11794e6d54deb3c9896/85c38/cover.jpg 720w,\n/static/a7e90b1e442fd11794e6d54deb3c9896/da6c7/cover.jpg 1440w","sizes":"(min-width: 1440px) 1440px, 100vw"},"sources":[{"srcSet":"/static/a7e90b1e442fd11794e6d54deb3c9896/e20e0/cover.webp 360w,\n/static/a7e90b1e442fd11794e6d54deb3c9896/a7cae/cover.webp 720w,\n/static/a7e90b1e442fd11794e6d54deb3c9896/c2da5/cover.webp 1440w","type":"image/webp","sizes":"(min-width: 1440px) 1440px, 100vw"}]},"width":1440,"height":964}}}},"fields":{"slug":"/development/back-end/java/serialization-java"}}},{"node":{"excerpt":"본 내용은 이펙티브 자바 3판(Joshua Bloch…","timeToRead":3,"frontmatter":{"title":"[이펙티브 자바 3] 객체 생성과 파괴 | 생성자에 매개변수가 많다면 빌더를 고려하라","excerpt":"정적 팩토리 메소드와 생성자에서 매개변수가 많아진 경우 효과적으로 처리하는 방법에 대해 알아봅니다.","tags":["effective_java","java","creating_and_destroying_objects"],"date":"2021-01-05T19:11:02.000Z","image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/3393fbd2a8b809fdb7a375e261636955/69eac/cover.jpg","srcSet":"/static/3393fbd2a8b809fdb7a375e261636955/706fa/cover.jpg 360w,\n/static/3393fbd2a8b809fdb7a375e261636955/f7872/cover.jpg 720w,\n/static/3393fbd2a8b809fdb7a375e261636955/69eac/cover.jpg 1440w","sizes":"(min-width: 1440px) 1440px, 100vw"},"sources":[{"srcSet":"/static/3393fbd2a8b809fdb7a375e261636955/22e2a/cover.webp 360w,\n/static/3393fbd2a8b809fdb7a375e261636955/4da88/cover.webp 720w,\n/static/3393fbd2a8b809fdb7a375e261636955/31706/cover.webp 1440w","type":"image/webp","sizes":"(min-width: 1440px) 1440px, 100vw"}]},"width":1440,"height":960}}}},"fields":{"slug":"/development/etc/effective-java/item2-consider-a-builder-when-faced-with-many-constructor-parameters"}}},{"node":{"excerpt":"본 내용은 이펙티브 자바 3판(Joshua Bloch…","timeToRead":4,"frontmatter":{"title":"[이펙티브 자바 3] 객체 생성과 파괴 | 생성자 대신 정적 팩터리 메서드를 고려하라","excerpt":"생성자와 정적 팩토리 메소드를 비교 분석하고, 예시를 바탕으로 각각의 장/단점에 대해 알아봅니다.","tags":["effective_java","java","creating_and_destroying_objects"],"date":"2021-01-05T08:28:47.000Z","image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/3393fbd2a8b809fdb7a375e261636955/69eac/cover.jpg","srcSet":"/static/3393fbd2a8b809fdb7a375e261636955/706fa/cover.jpg 360w,\n/static/3393fbd2a8b809fdb7a375e261636955/f7872/cover.jpg 720w,\n/static/3393fbd2a8b809fdb7a375e261636955/69eac/cover.jpg 1440w","sizes":"(min-width: 1440px) 1440px, 100vw"},"sources":[{"srcSet":"/static/3393fbd2a8b809fdb7a375e261636955/22e2a/cover.webp 360w,\n/static/3393fbd2a8b809fdb7a375e261636955/4da88/cover.webp 720w,\n/static/3393fbd2a8b809fdb7a375e261636955/31706/cover.webp 1440w","type":"image/webp","sizes":"(min-width: 1440px) 1440px, 100vw"}]},"width":1440,"height":960}}}},"fields":{"slug":"/development/etc/effective-java/item1-consider-static-factory-methods-instead-of-constructors"}}},{"node":{"excerpt":"개요 이 포스팅에서는 Java의 References 종류 중 Phantom Reference의 사용 예시와 **Phantom reachable**의 특징에 대해 알아보겠습니다. Reference 종류는 왜 나누어져 있는가? Java의 Reference…","timeToRead":4,"frontmatter":{"title":"Java Phantom Reachable, Phantom Reference 란","excerpt":"Java의 Phantom Reachable 특징과 Phantom Reference 사용 예시에 대해 알아봅니다.","tags":["reference","java","phantom_reference","phantom_reachable","reachable","기술_면접_질문"],"date":"2020-12-01T05:26:02.000Z","image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#486848","images":{"fallback":{"src":"/static/09ab2179559b89d3ddb241d37db13285/86738/cover.jpg","srcSet":"/static/09ab2179559b89d3ddb241d37db13285/79dfe/cover.jpg 360w,\n/static/09ab2179559b89d3ddb241d37db13285/be09f/cover.jpg 720w,\n/static/09ab2179559b89d3ddb241d37db13285/86738/cover.jpg 1440w","sizes":"(min-width: 1440px) 1440px, 100vw"},"sources":[{"srcSet":"/static/09ab2179559b89d3ddb241d37db13285/46060/cover.webp 360w,\n/static/09ab2179559b89d3ddb241d37db13285/c7e6a/cover.webp 720w,\n/static/09ab2179559b89d3ddb241d37db13285/f94ff/cover.webp 1440w","type":"image/webp","sizes":"(min-width: 1440px) 1440px, 100vw"}]},"width":1440,"height":1000}}}},"fields":{"slug":"/development/back-end/java/phantom-reference-in-java"}}},{"node":{"excerpt":"개요 이 포스팅에서는 Java의 References 종류 중 Weak Reference의 사용 예시와 **Weakly reachable**의 특징에 대해 알아보겠습니다. Reference 종류는 왜 나누어져 있는가? Java의 Reference…","timeToRead":3,"frontmatter":{"title":"Java Weakly Reachable, Weak Reference 란","excerpt":"Java의 Weakly Reachable 특징과 Weak Reference 사용 예시에 대해 알아봅니다.","tags":["reference","java","weak_reference","weakly_reachable","reachable","기술_면접_질문"],"date":"2020-12-01T04:25:27.000Z","image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/42af6e28771081cbb76776cb14ad5050/24dd4/cover.jpg","srcSet":"/static/42af6e28771081cbb76776cb14ad5050/6ce48/cover.jpg 175w,\n/static/42af6e28771081cbb76776cb14ad5050/92240/cover.jpg 350w,\n/static/42af6e28771081cbb76776cb14ad5050/24dd4/cover.jpg 700w","sizes":"(min-width: 700px) 700px, 100vw"},"sources":[{"srcSet":"/static/42af6e28771081cbb76776cb14ad5050/32753/cover.webp 175w,\n/static/42af6e28771081cbb76776cb14ad5050/ab163/cover.webp 350w,\n/static/42af6e28771081cbb76776cb14ad5050/c2d65/cover.webp 700w","type":"image/webp","sizes":"(min-width: 700px) 700px, 100vw"}]},"width":1440,"height":703.5428571428571}}}},"fields":{"slug":"/development/back-end/java/weak-reference-in-java"}}},{"node":{"excerpt":"개요 이 포스팅에서는 Java의 References 종류 중 Soft Reference의 사용 예시와 **Softly reachable**의 특징에 대해 알아보겠습니다. Reference 종류는 왜 나누어져 있는가? Java의 Reference…","timeToRead":3,"frontmatter":{"title":"Java Softly Reachable, Soft Reference 란","excerpt":"Java의 Softly Reachable 특징과 Soft Reference 사용 예시에 대해 알아봅니다.","tags":["reference","java","soft_reference","softly_reachable","reachable","기술_면접_질문"],"date":"2020-12-01T03:49:05.000Z","image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080818","images":{"fallback":{"src":"/static/c7c92b1bd6624c9c1e86afb737ea437f/69eac/cover.jpg","srcSet":"/static/c7c92b1bd6624c9c1e86afb737ea437f/706fa/cover.jpg 360w,\n/static/c7c92b1bd6624c9c1e86afb737ea437f/f7872/cover.jpg 720w,\n/static/c7c92b1bd6624c9c1e86afb737ea437f/69eac/cover.jpg 1440w","sizes":"(min-width: 1440px) 1440px, 100vw"},"sources":[{"srcSet":"/static/c7c92b1bd6624c9c1e86afb737ea437f/22e2a/cover.webp 360w,\n/static/c7c92b1bd6624c9c1e86afb737ea437f/4da88/cover.webp 720w,\n/static/c7c92b1bd6624c9c1e86afb737ea437f/31706/cover.webp 1440w","type":"image/webp","sizes":"(min-width: 1440px) 1440px, 100vw"}]},"width":1440,"height":960}}}},"fields":{"slug":"/development/back-end/java/soft-reference-in-java"}}}]}},"pageContext":{"limit":6,"skip":12,"currentPage":3,"numPages":6,"pathPrefix":"/development","category":"development"}},
    "staticQueryHashes": ["1144773313","288898337"]}