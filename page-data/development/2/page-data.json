{
    "componentChunkName": "component---src-templates-category-tsx",
    "path": "/development/2",
    "result": {"data":{"allCategoryYaml":{"edges":[{"node":{"id":"43bf9aaa-6e34-5b9e-b054-1dd7cbde6853","description":"개발을 진행하며 궁금하거나, 어려웠던 점 혹은 팁 공유","image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/d9f01768da90a6f71e7363da59371496/ea78d/development-cover.jpg","srcSet":"/static/d9f01768da90a6f71e7363da59371496/f6fcd/development-cover.jpg 320w,\n/static/d9f01768da90a6f71e7363da59371496/518ce/development-cover.jpg 640w,\n/static/d9f01768da90a6f71e7363da59371496/ea78d/development-cover.jpg 1280w","sizes":"(min-width: 1280px) 1280px, 100vw"},"sources":[{"srcSet":"/static/d9f01768da90a6f71e7363da59371496/dde70/development-cover.webp 320w,\n/static/d9f01768da90a6f71e7363da59371496/3c1b2/development-cover.webp 640w,\n/static/d9f01768da90a6f71e7363da59371496/f5c3c/development-cover.webp 1280w","type":"image/webp","sizes":"(min-width: 1280px) 1280px, 100vw"}]},"width":1440,"height":956.25}}}}},{"node":{"id":"acb9dfba-806f-5fe9-a9ef-4b38ccf2aa56","description":"알고리즘 문제 풀이 및 팁 공유","image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#e8e8e8","images":{"fallback":{"src":"/static/7c059598688e3fd026dab3857225bb51/7f99f/algorithm-cover.jpg","srcSet":"/static/7c059598688e3fd026dab3857225bb51/3b635/algorithm-cover.jpg 360w,\n/static/7c059598688e3fd026dab3857225bb51/9007f/algorithm-cover.jpg 720w,\n/static/7c059598688e3fd026dab3857225bb51/7f99f/algorithm-cover.jpg 1440w","sizes":"(min-width: 1440px) 1440px, 100vw"},"sources":[{"srcSet":"/static/7c059598688e3fd026dab3857225bb51/25350/algorithm-cover.webp 360w,\n/static/7c059598688e3fd026dab3857225bb51/110ca/algorithm-cover.webp 720w,\n/static/7c059598688e3fd026dab3857225bb51/8ff83/algorithm-cover.webp 1440w","type":"image/webp","sizes":"(min-width: 1440px) 1440px, 100vw"}]},"width":1440,"height":810}}}}}]},"allMarkdownRemark":{"totalCount":31,"edges":[{"node":{"excerpt":"개요 이 포스팅에서는 DB의 트랜잭션(Transaction)의 특성 및 연산의 종류와 그에 따른 상태에 대해 알아보겠습니다. 트랜잭션이란? DB의 트랜잭션에 대해 알아보도록 하겠습니다. DBMS(Database Management System…","timeToRead":2,"frontmatter":{"title":"DB Transaction","excerpt":"DB의 트랜잭션(Transaction)의 특성 및 연산의 종류와 그에 따른 상태에 대해 알아봅니다.","tags":["database","transaction","ACID"],"date":"2021-04-07T16:12:14.000Z","image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#182848","images":{"fallback":{"src":"/static/b069f2b5aaebb29096a33df3ea779648/a5f7d/cover.jpg","srcSet":"/static/b069f2b5aaebb29096a33df3ea779648/037a6/cover.jpg 359w,\n/static/b069f2b5aaebb29096a33df3ea779648/01f3d/cover.jpg 718w,\n/static/b069f2b5aaebb29096a33df3ea779648/a5f7d/cover.jpg 1436w","sizes":"(min-width: 1436px) 1436px, 100vw"},"sources":[{"srcSet":"/static/b069f2b5aaebb29096a33df3ea779648/6ee3c/cover.webp 359w,\n/static/b069f2b5aaebb29096a33df3ea779648/5f7ed/cover.webp 718w,\n/static/b069f2b5aaebb29096a33df3ea779648/99b81/cover.webp 1436w","type":"image/webp","sizes":"(min-width: 1436px) 1436px, 100vw"}]},"width":1440,"height":900.5013927576601}}}},"fields":{"slug":"/development/etc/what-is-the-transaction"}}},{"node":{"excerpt":"본 내용은 Head First 디자인 패턴(Eric Freeman, Elisabeth Freeman, Kathy Sierra, Bert Bates…","timeToRead":5,"frontmatter":{"title":"[Head First Design Patterns] 데코레이터 패턴(Decorator Pattern)","excerpt":"객체에 추가적인 요건을 동적으로 첨가하고, 데코레이터는 서브클래스를 만드는 것을 통해서 기능을 유연하게 확장할 수 있는 방법을 제공합니다.","tags":["head_first_design_patterns","decorator_patterns"],"date":"2021-03-05T05:01:48.000Z","image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/f1019d69621dc4df9c6e06ee35582e2e/69eac/cover.jpg","srcSet":"/static/f1019d69621dc4df9c6e06ee35582e2e/706fa/cover.jpg 360w,\n/static/f1019d69621dc4df9c6e06ee35582e2e/f7872/cover.jpg 720w,\n/static/f1019d69621dc4df9c6e06ee35582e2e/69eac/cover.jpg 1440w","sizes":"(min-width: 1440px) 1440px, 100vw"},"sources":[{"srcSet":"/static/f1019d69621dc4df9c6e06ee35582e2e/22e2a/cover.webp 360w,\n/static/f1019d69621dc4df9c6e06ee35582e2e/4da88/cover.webp 720w,\n/static/f1019d69621dc4df9c6e06ee35582e2e/31706/cover.webp 1440w","type":"image/webp","sizes":"(min-width: 1440px) 1440px, 100vw"}]},"width":1440,"height":960}}}},"fields":{"slug":"/development/etc/head-first-design-patterns/decorator-pattern"}}},{"node":{"excerpt":"본 내용은 Head First 디자인 패턴(Eric Freeman, Elisabeth Freeman, Kathy Sierra, Bert Bates…","timeToRead":4,"frontmatter":{"title":"[Head First Design Patterns] 옵저버 패턴(Observer Pattern)","excerpt":"한 객체의 상태가 바뀌면 그 객체에 의존하는 다른 객체들한테 연락이 가고 자동으로 내용이 갱신되는 방식으로 일대다 의존성을 정의합니다.","tags":["head_first_design_patterns","observer_patterns"],"date":"2021-03-04T09:18:02.000Z","image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/f1019d69621dc4df9c6e06ee35582e2e/69eac/cover.jpg","srcSet":"/static/f1019d69621dc4df9c6e06ee35582e2e/706fa/cover.jpg 360w,\n/static/f1019d69621dc4df9c6e06ee35582e2e/f7872/cover.jpg 720w,\n/static/f1019d69621dc4df9c6e06ee35582e2e/69eac/cover.jpg 1440w","sizes":"(min-width: 1440px) 1440px, 100vw"},"sources":[{"srcSet":"/static/f1019d69621dc4df9c6e06ee35582e2e/22e2a/cover.webp 360w,\n/static/f1019d69621dc4df9c6e06ee35582e2e/4da88/cover.webp 720w,\n/static/f1019d69621dc4df9c6e06ee35582e2e/31706/cover.webp 1440w","type":"image/webp","sizes":"(min-width: 1440px) 1440px, 100vw"}]},"width":1440,"height":960}}}},"fields":{"slug":"/development/etc/head-first-design-patterns/observer-pattern"}}},{"node":{"excerpt":"본 내용은 Head First 디자인 패턴(Eric Freeman, Elisabeth Freeman, Kathy Sierra, Bert Bates…","timeToRead":3,"frontmatter":{"title":"[Head First Design Patterns] 스트래티지 패턴(Strategy Pattern)","excerpt":"알고리즘군을 정의하고 각각을 캡슐화하여 교환해서 사용할 수 있도록 만듭니다.","tags":["head_first_design_patterns","strategy_patterns"],"date":"2021-03-03T12:36:03.000Z","image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/f1019d69621dc4df9c6e06ee35582e2e/69eac/cover.jpg","srcSet":"/static/f1019d69621dc4df9c6e06ee35582e2e/706fa/cover.jpg 360w,\n/static/f1019d69621dc4df9c6e06ee35582e2e/f7872/cover.jpg 720w,\n/static/f1019d69621dc4df9c6e06ee35582e2e/69eac/cover.jpg 1440w","sizes":"(min-width: 1440px) 1440px, 100vw"},"sources":[{"srcSet":"/static/f1019d69621dc4df9c6e06ee35582e2e/22e2a/cover.webp 360w,\n/static/f1019d69621dc4df9c6e06ee35582e2e/4da88/cover.webp 720w,\n/static/f1019d69621dc4df9c6e06ee35582e2e/31706/cover.webp 1440w","type":"image/webp","sizes":"(min-width: 1440px) 1440px, 100vw"}]},"width":1440,"height":960}}}},"fields":{"slug":"/development/etc/head-first-design-patterns/strategy-pattern"}}},{"node":{"excerpt":"본 내용은 GoF의 디자인 패턴(Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides…","timeToRead":3,"frontmatter":{"title":"[GoF의 디자인 패턴] 생성 패턴 | 추상 팩토리(Abstract Factory) 패턴","excerpt":"생성 패턴중 하나인, 추상 팩토리 패턴에 대해 알아봅니다.","tags":["gang_of_four_design_patterns","creational_patterns"],"date":"2021-02-26T10:33:22.000Z","image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/e854ef84114323ab4a675e2564dce522/69eac/cover.jpg","srcSet":"/static/e854ef84114323ab4a675e2564dce522/706fa/cover.jpg 360w,\n/static/e854ef84114323ab4a675e2564dce522/f7872/cover.jpg 720w,\n/static/e854ef84114323ab4a675e2564dce522/69eac/cover.jpg 1440w","sizes":"(min-width: 1440px) 1440px, 100vw"},"sources":[{"srcSet":"/static/e854ef84114323ab4a675e2564dce522/22e2a/cover.webp 360w,\n/static/e854ef84114323ab4a675e2564dce522/4da88/cover.webp 720w,\n/static/e854ef84114323ab4a675e2564dce522/31706/cover.webp 1440w","type":"image/webp","sizes":"(min-width: 1440px) 1440px, 100vw"}]},"width":1440,"height":960}}}},"fields":{"slug":"/development/etc/gang-of-four-design-patterns/abstract-factory-pattern"}}},{"node":{"excerpt":"개요 이 포스팅에서는 Java 객체의 직렬화(Serialization)와 직렬화된 정보를 Java 객체로 만드는 역 직렬화(Deserialization…","timeToRead":6,"frontmatter":{"title":"Java 직렬화 (Serialization)와 역 직렬화 (Deserialization) 란","excerpt":"Java 객체의 직렬화(Serialization)와 역 직렬화(Deserialization)의 개념과 사용 예시에 대해 알아봅니다.","tags":["serialization","deserialization","serializable","java","기술_면접_질문"],"date":"2021-01-11T08:43:16.000Z","image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/a7e90b1e442fd11794e6d54deb3c9896/da6c7/cover.jpg","srcSet":"/static/a7e90b1e442fd11794e6d54deb3c9896/62978/cover.jpg 360w,\n/static/a7e90b1e442fd11794e6d54deb3c9896/85c38/cover.jpg 720w,\n/static/a7e90b1e442fd11794e6d54deb3c9896/da6c7/cover.jpg 1440w","sizes":"(min-width: 1440px) 1440px, 100vw"},"sources":[{"srcSet":"/static/a7e90b1e442fd11794e6d54deb3c9896/e20e0/cover.webp 360w,\n/static/a7e90b1e442fd11794e6d54deb3c9896/a7cae/cover.webp 720w,\n/static/a7e90b1e442fd11794e6d54deb3c9896/c2da5/cover.webp 1440w","type":"image/webp","sizes":"(min-width: 1440px) 1440px, 100vw"}]},"width":1440,"height":964}}}},"fields":{"slug":"/development/back-end/java/serialization-java"}}}]}},"pageContext":{"limit":6,"skip":6,"currentPage":2,"numPages":6,"pathPrefix":"/development","category":"development"}},
    "staticQueryHashes": ["1144773313","288898337"]}