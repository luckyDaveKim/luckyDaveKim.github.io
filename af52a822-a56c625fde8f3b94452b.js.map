{"version":3,"file":"af52a822-a56c625fde8f3b94452b.js","mappings":"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","sources":["webpack://devdave/./src/components/header/SiteNav.tsx"],"sourcesContent":["import { GatsbyLinkProps, Link } from 'gatsby';\nimport { darken } from 'polished';\nimport React  from 'react';\n\nimport { LinkGetProps } from '@reach/router';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport { colors } from '../../styles/colors';\nimport {\n  SocialLink,\n  SocialLinkGitHub,\n  SocialLinkLinkedIn,\n  SocialLinkFacebook,\n  SocialLinkInstagram\n} from '../../styles/shared';\nimport config from '../../website-config';\nimport { GitHub } from '../icons/GitHub';\nimport { LinkedIn } from \"../icons/LinkedIn\";\nimport { Facebook } from '../icons/Facebook';\nimport { Instagram } from '../icons/Instagram';\nimport { Twitter } from '../icons/Twitter';\nimport { SubscribeModal } from '../subscribe/SubscribeModal';\nimport { SiteNavLogo } from './SiteNavLogo';\n\ninterface SiteNavProps {\n  isHome?: boolean;\n  isPost?: boolean;\n  post?: any;\n}\n\ninterface SiteNavState {\n  showTitle: boolean;\n}\n\nclass SiteNav extends React.Component<SiteNavProps, SiteNavState> {\n  subscribe = React.createRef<SubscribeModal>();\n  titleRef = React.createRef<HTMLSpanElement>();\n  lastScrollY = 0;\n  ticking = false;\n  state = { showTitle: false };\n\n  openModal = () => {\n    if (this.subscribe.current) {\n      this.subscribe.current.open();\n    }\n  };\n\n  componentDidMount(): void {\n    this.lastScrollY = window.scrollY;\n    if (this.props.isPost) {\n      window.addEventListener('scroll', this.onScroll, { passive: true });\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.removeEventListener('scroll', this.onScroll);\n  }\n\n  onScroll = () => {\n    if (!this.titleRef || !this.titleRef.current) {\n      return;\n    }\n\n    if (!this.ticking) {\n      requestAnimationFrame(this.update);\n    }\n\n    this.ticking = true;\n  };\n\n  update = () => {\n    if (!this.titleRef || !this.titleRef.current) {\n      return;\n    }\n\n    this.lastScrollY = window.scrollY;\n\n    const trigger = this.titleRef.current.getBoundingClientRect().top;\n    const triggerOffset = this.titleRef.current.offsetHeight + 35;\n\n    // show/hide post title\n    if (this.lastScrollY >= trigger + triggerOffset) {\n      this.setState({ showTitle: true });\n    } else {\n      this.setState({ showTitle: false });\n    }\n\n    this.ticking = false;\n  };\n\n  render() {\n    const { isHome = false, isPost = false, post = {} } = this.props;\n    return (\n      <>\n        {config.showSubscribe && <SubscribeModal ref={this.subscribe} />}\n        <nav css={[isHome && HomeNavRaise, SiteNavStyles]}>\n          <SiteNavLeft className=\"site-nav-left\">\n            {!isHome && <SiteNavLogo />}\n            <SiteNavContent css={[this.state.showTitle ? HideNav : '']}>\n              <ul css={NavStyles} role=\"menu\">\n                <li role=\"menuitem\">\n                  <Link to=\"/\">Home</Link>\n                </li>\n                <li role=\"menuitem\">\n                  <NavLink to=\"/about\" activeClassName=\"active\">\n                    About\n                  </NavLink>\n                </li>\n                <li role=\"menuitem\">\n                  <NavLink to=\"/development\" activeClassName=\"active\">\n                    Development\n                  </NavLink>\n                </li>\n                <li role=\"menuitem\">\n                  <NavLink to=\"/algorithm\" activeClassName=\"active\">\n                    Algorithm\n                  </NavLink>\n                </li>\n                <li role=\"menuitem\">\n                  <NavLink to=\"/tags\" activeClassName=\"active\">\n                    Tags\n                  </NavLink>\n                </li>\n              </ul>\n              {isPost && (\n                <NavPostTitle ref={this.titleRef} className=\"nav-post-title\">\n                  {post.title}\n                </NavPostTitle>\n              )}\n            </SiteNavContent>\n          </SiteNavLeft>\n          <SiteNavRight>\n            <SocialLinks>\n              {config.github && (\n                <a\n                  css={[SocialLink, SocialLinkGitHub]}\n                  href={config.github}\n                  target=\"_blank\"\n                  title=\"GitHub\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <GitHub />\n                </a>\n              )}\n              {config.linkedin && (\n                <a\n                  css={[SocialLink, SocialLinkLinkedIn]}\n                  href={config.linkedin}\n                  target=\"_blank\"\n                  title=\"LinkedIn\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <LinkedIn />\n                </a>\n              )}\n              {config.facebook && (\n                <a\n                  css={[SocialLink, SocialLinkFacebook]}\n                  href={config.facebook}\n                  target=\"_blank\"\n                  title=\"Facebook\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <Facebook />\n                </a>\n              )}\n              {config.instagram && (\n                <a\n                  css={[SocialLink, SocialLinkInstagram]}\n                  href={config.instagram}\n                  target=\"_blank\"\n                  title=\"Instagram\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <Instagram />\n                </a>\n              )}\n              {config.twitter && (\n                <a\n                  css={SocialLink}\n                  href={config.twitter}\n                  title=\"Twitter\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <Twitter />\n                </a>\n              )}\n            </SocialLinks>\n            {config.showSubscribe && (\n              <SubscribeButton onClick={this.openModal}>Subscribe</SubscribeButton>\n            )}\n          </SiteNavRight>\n        </nav>\n      </>\n    );\n  }\n}\n\nconst NavLink: React.FC<Omit<GatsbyLinkProps<{}>, 'ref'>> = ({ className, children, ...props }) => {\n  const isActive = (className: string | undefined) => ({ isCurrent, isPartiallyCurrent }: LinkGetProps) => {\n    const activeClassName = { className: `${className} active` }\n    return (isCurrent || isPartiallyCurrent ) ? activeClassName : { className };\n  };\n\n  return (\n    <Link getProps={isActive(className)} {...props}>\n      {children}\n    </Link>\n  )\n};\n\nexport const SiteNavMain = css`\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  z-index: 1000;\n  /* background: color(var(--darkgrey) l(-5%)) */\n  background: ${darken('0.05', colors.darkgrey)};\n\n  @media (max-width: 700px) {\n    padding-right: 0;\n    padding-left: 0;\n  }\n`;\n\nconst HomeNavRaise = css`\n  @media (min-width: 900px) {\n    position: relative;\n    top: -70px;\n  }\n`;\n\nconst SiteNavStyles = css`\n  position: relative;\n  z-index: 100;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  overflow-y: hidden;\n  height: 64px;\n  font-size: 1.3rem;\n`;\n\nconst SiteNavLeft = styled.div`\n  flex: 1 0 auto;\n  display: flex;\n  align-items: center;\n  overflow-x: auto;\n  overflow-y: hidden;\n  -webkit-overflow-scrolling: touch;\n  margin-right: 10px;\n  padding: 10px 0 80px;\n  font-weight: 500;\n  letter-spacing: 0.2px;\n  text-transform: uppercase;\n  white-space: nowrap;\n\n  -ms-overflow-scrolling: touch;\n\n  @media (max-width: 700px) {\n    margin-right: 0;\n    padding-left: 5vw;\n  }\n`;\n\nconst SiteNavContent = styled.div`\n  position: relative;\n  align-self: flex-start;\n`;\n\nconst NavStyles = css`\n  position: absolute;\n  z-index: 1000;\n  display: flex;\n  margin: 0 0 0 -12px;\n  padding: 0;\n  list-style: none;\n  transition: all 1s cubic-bezier(0.19, 1, 0.22, 1);\n\n  li {\n    display: block;\n    margin: 0;\n    padding: 0;\n  }\n\n  li a {\n    position: relative;\n    display: block;\n    padding: 12px 12px;\n    color: #fff;\n    opacity: 0.8;\n    transition: opacity 0.35s ease-in-out;\n  }\n\n  li a:hover {\n    text-decoration: none;\n    opacity: 1;\n  }\n\n  li a:before {\n    content: '';\n    position: absolute;\n    right: 100%;\n    bottom: 8px;\n    left: 12px;\n    height: 1px;\n    background: #fff;\n    opacity: 0.25;\n    transition: all 0.35s ease-in-out;\n  }\n\n  li a:hover:before {\n    right: 12px;\n    opacity: 0.5;\n  }\n\n  li .active {\n    opacity: 1;\n  }\n\n  li .active:before {\n    right: 12px;\n    opacity: 0.5;\n  }\n`;\n\nconst SiteNavRight = styled.div`\n  flex: 0 1 auto;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  padding: 10px 0;\n  height: 64px;\n\n  @media (max-width: 700px) {\n    display: none;\n  }\n`;\n\nconst SocialLinks = styled.div`\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n`;\n\nconst SubscribeButton = styled.a`\n  display: block;\n  padding: 4px 10px;\n  margin: 0 0 0 10px;\n  border: #fff 1px solid;\n  color: #fff;\n  line-height: 1em;\n  border-radius: 10px;\n  opacity: 0.8;\n\n  :hover {\n    text-decoration: none;\n    opacity: 1;\n    cursor: pointer;\n  }\n`;\n\nconst NavPostTitle = styled.span`\n  visibility: hidden;\n  position: absolute;\n  top: 9px;\n  color: #fff;\n  font-size: 1.7rem;\n  font-weight: 400;\n  text-transform: none;\n  opacity: 0;\n  transition: all 1s cubic-bezier(0.19, 1, 0.22, 1);\n  transform: translateY(175%);\n\n  .dash {\n    left: -25px;\n  }\n\n  .dash:before {\n    content: '– ';\n    opacity: 0.5;\n  }\n`;\n\nconst HideNav = css`\n  ul {\n    visibility: hidden;\n    opacity: 0;\n    transform: translateY(-175%);\n  }\n  .nav-post-title {\n    visibility: visible;\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\nexport default SiteNav;\n"],"names":["SiteNav","_React$Component","args","_this","call","apply","concat","subscribe","React","titleRef","lastScrollY","ticking","state","showTitle","openModal","current","open","onScroll","requestAnimationFrame","update","window","scrollY","trigger","getBoundingClientRect","top","triggerOffset","offsetHeight","setState","_inheritsLoose","_proto","prototype","componentDidMount","this","props","isPost","addEventListener","passive","componentWillUnmount","removeEventListener","render","isHome","post","___EmotionJSX","config","showSubscribe","SubscribeModal","ref","css","HomeNavRaise","SiteNavStyles","SiteNavLeft","className","SiteNavLogo","SiteNavContent","HideNav","NavStyles","role","Link","to","NavLink","activeClassName","NavPostTitle","title","SiteNavRight","SocialLinks","github","SocialLink","SocialLinkGitHub","href","target","rel","GitHub","linkedin","SocialLinkLinkedIn","LinkedIn","facebook","SocialLinkFacebook","Facebook","instagram","SocialLinkInstagram","Instagram","twitter","Twitter","SubscribeButton","onClick","children","_extends","getProps","isCurrent","isPartiallyCurrent","isActive","SiteNavMain","darken","colors","darkgrey","name","styles","_styled"],"sourceRoot":""}