{"version":3,"file":"component---src-templates-index-tsx-6f13b5b3be0ee31be3ea.js","mappings":"8NAuDA,MA0IMA,EAAS,CAAAC,KAAA,UAAAC,OAAA,otBAyCf,UAnLwCC,IAAS,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC/C,MAAM,MAAEC,EAAK,OAAEC,GAAWR,EAAMS,KAAKC,OAAOC,gBAAgBC,gBAE5D,OACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAW,CAACC,IAAKlB,IAChBgB,EAAAA,EAAAA,IAACG,EAAAA,EAAM,MACLH,EAAAA,EAAAA,IAAA,aAAQI,EAAAA,EAAOC,QACfL,EAAAA,EAAAA,IAAA,QAAMf,KAAK,cAAcqB,QAASF,EAAAA,EAAOG,eACzCP,EAAAA,EAAAA,IAAA,QAAMQ,SAAS,eAAeF,QAASF,EAAAA,EAAOC,SAC9CL,EAAAA,EAAAA,IAAA,QAAMQ,SAAS,UAAUF,QAAQ,aACjCN,EAAAA,EAAAA,IAAA,QAAMQ,SAAS,WAAWF,QAASF,EAAAA,EAAOC,SAC1CL,EAAAA,EAAAA,IAAA,QAAMQ,SAAS,iBAAiBF,QAASF,EAAAA,EAAOG,eAChDP,EAAAA,EAAAA,IAAA,QAAMQ,SAAS,SAASF,QAASF,EAAAA,EAAOK,WACxCT,EAAAA,EAAAA,IAAA,QACEQ,SAAS,WACTF,QAAU,GAAEF,EAAAA,EAAOK,UAA2D,QAAnDrB,EAAED,EAAMS,KAAKC,OAAOC,gBAAgBC,uBAAe,IAAAX,GAAiB,QAAjBC,EAAjDD,EAAmDsB,OAAOC,gBAAQ,IAAAtB,OAAjB,EAAjDA,EAAoEuB,QAElGR,EAAAA,EAAOS,WAAYb,EAAAA,EAAAA,IAAA,QAAMQ,SAAS,oBAAoBF,QAASF,EAAAA,EAAOS,WACtET,EAAAA,EAAOU,yBACNd,EAAAA,EAAAA,IAAA,QAAMf,KAAK,2BAA2BqB,QAASF,EAAAA,EAAOU,yBAEvDV,EAAAA,EAAOW,wBACNf,EAAAA,EAAAA,IAAA,QAAMf,KAAK,0BAA0BqB,QAASF,EAAAA,EAAOW,yBAEvDf,EAAAA,EAAAA,IAAA,QAAMf,KAAK,eAAeqB,QAAQ,yBAClCN,EAAAA,EAAAA,IAAA,QAAMf,KAAK,gBAAgBqB,QAASF,EAAAA,EAAOC,SAC3CL,EAAAA,EAAAA,IAAA,QAAMf,KAAK,sBAAsBqB,QAASF,EAAAA,EAAOG,eACjDP,EAAAA,EAAAA,IAAA,QAAMf,KAAK,cAAcqB,QAASF,EAAAA,EAAOK,WACzCT,EAAAA,EAAAA,IAAA,QACEf,KAAK,gBACLqB,QAAU,GAAEF,EAAAA,EAAOK,UAA2D,QAAnDnB,EAAEH,EAAMS,KAAKC,OAAOC,gBAAgBC,uBAAe,IAAAT,GAAiB,QAAjBC,EAAjDD,EAAmDoB,OAAOC,gBAAQ,IAAApB,OAAjB,EAAjDA,EAAoEqB,QAElGR,EAAAA,EAAOY,UACNhB,EAAAA,EAAAA,IAAA,QACEf,KAAK,eACLqB,QAAU,IAAGF,EAAAA,EAAOY,QAAQC,MAAM,wBAAwB,QAG9DjB,EAAAA,EAAAA,IAAA,QAAMQ,SAAS,iBAAiBF,QAASZ,EAAMwB,cAC/ClB,EAAAA,EAAAA,IAAA,QAAMQ,SAAS,kBAAkBF,QAASX,EAAOuB,eAEnDlB,EAAAA,EAAAA,IAACmB,EAAAA,EAAO,MACNnB,EAAAA,EAAAA,IAAA,OACEE,IAAG,CAAGkB,EAAAA,GAAOC,EAAAA,GAAYC,EAAAA,GAAgB,OACzCC,UAAU,yBACVC,MAAO,CACLC,gBAAkB,QAAwD,QAAnDjC,EAAEL,EAAMS,KAAKC,OAAOC,gBAAgBC,uBAAe,IAAAP,GAAiB,QAAjBC,EAAjDD,EAAmDkB,OAAOC,gBAAQ,IAAAlB,OAAjB,EAAjDA,EAAoEmB,WAG/FZ,EAAAA,EAAAA,IAAA,OAAKE,IAAKwB,EAAAA,KACR1B,EAAAA,EAAAA,IAAC2B,EAAAA,GAAiB,CAACJ,UAAU,uBAC3BvB,EAAAA,EAAAA,IAAC4B,EAAAA,GAAS,CAACL,UAAU,cAClBpC,EAAMS,KAAKiC,MACV7B,EAAAA,EAAAA,IAAC8B,EAAAA,EAAW,CACVN,MAAO,CAAEO,UAAW,QACpBC,MAAO7C,EAAMS,KAAKiC,KAAK/B,gBAAgBC,gBACvCkC,IAAK7B,EAAAA,EAAOC,QAGdD,EAAAA,EAAOC,QAGXL,EAAAA,EAAAA,IAACkC,EAAAA,GAAe,KAAE9B,EAAAA,EAAOG,eAE3BP,EAAAA,EAAAA,IAACmC,EAAAA,EAAO,CAACC,QAAM,OAGnBpC,EAAAA,EAAAA,IAAA,QAAMqC,GAAG,YAAYnC,IAAG,CAAGoC,EAAAA,GAAUlB,EAAAA,GAAK,SACxCpB,EAAAA,EAAAA,IAAA,OAAKE,IAAKwB,EAAAA,KACR1B,EAAAA,EAAAA,IAAA,OAAKE,IAAG,CAAGqC,EAAAA,GAAUC,EAAAA,GAAa,QAC/BrD,EAAMS,KAAK6C,kBAAkBC,MAAMC,KAAKC,IAErC5C,EAAAA,EAAAA,IAAC6C,EAAAA,EAAQ,CAACC,IAAKF,EAAKG,KAAKC,OAAOC,KAAML,KAAMA,EAAKG,aAM3D/C,EAAAA,EAAAA,IAACkD,EAAAA,EAAU,CACTC,YAAahE,EAAMiE,YAAYD,YAC/BE,SAAUlE,EAAMiE,YAAYC,SAC5BC,WAAYnE,EAAMiE,YAAYE,cAEhCtD,EAAAA,EAAAA,IAACuD,EAAAA,EAAM,OAEG,C","sources":["webpack://devdave/./src/templates/index.tsx"],"sourcesContent":["import { graphql } from 'gatsby';\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { css } from '@emotion/react';\n\nimport { Footer } from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport Pagination from '../components/Pagination';\nimport { PostCard } from '../components/PostCard';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  inner,\n  outer,\n  PostFeed,\n  PostFeedRaise,\n  SiteDescription,\n  SiteHeader,\n  SiteHeaderContent,\n  SiteMain,\n  SiteTitle,\n  SiteHeaderStyles,\n} from '../styles/shared';\nimport config from '../website-config';\nimport { PageContext } from './post';\n\nexport interface IndexProps {\n  pageContext: {\n    limit: number;\n    skip: number;\n    currentPage: number;\n    numPages: number;\n    pathPrefix: string;\n  };\n  data: {\n    logo: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData;\n      };\n    };\n    header: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData;\n      };\n    };\n    allMarkdownRemark: {\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n  };\n}\n\nconst IndexPage: React.FC<IndexProps> = props => {\n  const { width, height } = props.data.header.childImageSharp.gatsbyImageData;\n\n  return (\n    <IndexLayout css={HomePosts}>\n      <Helmet>\n        <title>{config.title}</title>\n        <meta name=\"description\" content={config.description} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content={config.title} />\n        <meta property=\"og:description\" content={config.description} />\n        <meta property=\"og:url\" content={config.siteUrl} />\n        <meta\n          property=\"og:image\"\n          content={`${config.siteUrl}${props.data.header.childImageSharp.gatsbyImageData?.images.fallback?.src}`}\n        />\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\n        {config.googleSiteVerification && (\n          <meta name=\"google-site-verification\" content={config.googleSiteVerification} />\n        )}\n        {config.naverSiteVerification && (\n          <meta name=\"naver-site-verification\" content={config.naverSiteVerification} />\n        )}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={config.title} />\n        <meta name=\"twitter:description\" content={config.description} />\n        <meta name=\"twitter:url\" content={config.siteUrl} />\n        <meta\n          name=\"twitter:image\"\n          content={`${config.siteUrl}${props.data.header.childImageSharp.gatsbyImageData?.images.fallback?.src}`}\n        />\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        <meta property=\"og:image:width\" content={width.toString()} />\n        <meta property=\"og:image:height\" content={height.toString()} />\n      </Helmet>\n      <Wrapper>\n        <div\n          css={[outer, SiteHeader, SiteHeaderStyles]}\n          className=\"site-header-background\"\n          style={{\n            backgroundImage: `url('${props.data.header.childImageSharp.gatsbyImageData?.images.fallback?.src}')`,\n          }}\n        >\n          <div css={inner}>\n            <SiteHeaderContent className=\"site-header-conent\">\n              <SiteTitle className=\"site-title\">\n                {props.data.logo ? (\n                  <GatsbyImage\n                    style={{ maxHeight: '55px' }}\n                    image={props.data.logo.childImageSharp.gatsbyImageData}\n                    alt={config.title}\n                  />\n                ) : (\n                  config.title\n                )}\n              </SiteTitle>\n              <SiteDescription>{config.description}</SiteDescription>\n            </SiteHeaderContent>\n            <SiteNav isHome />\n          </div>\n        </div>\n        <main id=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            <div css={[PostFeed, PostFeedRaise]}>\n              {props.data.allMarkdownRemark.edges.map((post) => {\n                return (\n                  <PostCard key={post.node.fields.slug} post={post.node} />\n                );\n              })}\n            </div>\n          </div>\n        </main>\n        <Pagination\n          currentPage={props.pageContext.currentPage}\n          numPages={props.pageContext.numPages}\n          pathPrefix={props.pageContext.pathPrefix}\n        />\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query blogPageQuery($skip: Int!, $limit: Int!) {\n    logo: file(relativePath: { eq: \"img/blog-logo.png\" }) {\n      childImageSharp {\n        gatsbyImageData(layout: FIXED)\n      }\n    }\n    header: file(relativePath: { eq: \"img/blog-cover.jpg\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          layout: FIXED\n          width: 1440\n        )\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { draft: { ne: true } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          timeToRead\n          frontmatter {\n            title\n            date\n            tags\n            draft\n            excerpt\n            image {\n              childImageSharp {\n                gatsbyImageData(\n                  layout: CONSTRAINED\n                  width: 1440\n                )\n              }\n            }\n          }\n          excerpt\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst HomePosts = css`\n  @media (min-width: 795px) {\n    .post-card:nth-of-type(6n + 1):not(.no-image) {\n      flex: 1 1 100%;\n      flex-direction: row;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-image-link {\n      position: relative;\n      flex: 1 1 auto;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-image {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-content {\n      flex: 0 1 357px;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) h2 {\n      font-size: 2.6rem;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) p {\n      font-size: 1.8rem;\n      line-height: 1.55em;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-content-link {\n      padding: 30px 40px 0;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-meta {\n      padding: 0 40px 30px;\n    }\n  }\n`;\n\nexport default IndexPage;\n"],"names":["HomePosts","name","styles","props","_props$data$header$ch","_props$data$header$ch2","_props$data$header$ch3","_props$data$header$ch4","_props$data$header$ch5","_props$data$header$ch6","width","height","data","header","childImageSharp","gatsbyImageData","___EmotionJSX","IndexLayout","css","Helmet","config","title","content","description","property","siteUrl","images","fallback","src","facebook","googleSiteVerification","naverSiteVerification","twitter","split","toString","Wrapper","outer","SiteHeader","SiteHeaderStyles","className","style","backgroundImage","inner","SiteHeaderContent","SiteTitle","logo","GatsbyImage","maxHeight","image","alt","SiteDescription","SiteNav","isHome","id","SiteMain","PostFeed","PostFeedRaise","allMarkdownRemark","edges","map","post","PostCard","key","node","fields","slug","Pagination","currentPage","pageContext","numPages","pathPrefix","Footer"],"sourceRoot":""}